
# Copyright (C) 2009-2012 Chris McClelland
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#===============================================================================
# USB interface
#===============================================================================
# IFCLK
NET "fx2clk_in" IOSTANDARD = LVTTL;
NET "fx2clk_in" LOC = C10;
# PA4/FIFOADR0
NET "fx2addr_out[0]" IOSTANDARD = LVTTL;
NET "fx2addr_out[0]" LOC = A14;
# PA5/FIFOADR1
NET "fx2addr_out[1]" IOSTANDARD = LVTTL;
NET "fx2addr_out[1]" LOC = B14;
# PB0/FD0
NET "fx2data_io[0]" IOSTANDARD = LVTTL;
NET "fx2data_io[0]" LOC = A2;
# PB1/FD1
NET "fx2data_io[1]" IOSTANDARD = LVTTL;
NET "fx2data_io[1]" LOC = D6;
# PB2/FD2
NET "fx2data_io[2]" IOSTANDARD = LVTTL;
NET "fx2data_io[2]" LOC = C6;
# PB3/FD3
NET "fx2data_io[3]" IOSTANDARD = LVTTL;
NET "fx2data_io[3]" LOC = B3;
# PB4/FD4
NET "fx2data_io[4]" IOSTANDARD = LVTTL;
NET "fx2data_io[4]" LOC = A3;
# PB5/FD5
NET "fx2data_io[5]" IOSTANDARD = LVTTL;
NET "fx2data_io[5]" LOC = B4;
# PB6/FD6
NET "fx2data_io[6]" IOSTANDARD = LVTTL;
NET "fx2data_io[6]" LOC = A4;
# PB7/FD7
NET "fx2data_io[7]" IOSTANDARD = LVTTL;
NET "fx2data_io[7]" LOC = C5;
# RDY0/SLRD
NET "fx2read_out" IOSTANDARD = LVTTL;
NET "fx2read_out" LOC = F13;
# PA2/SLOE
NET "fx2oe_out" IOSTANDARD = LVTTL;
NET "fx2oe_out" LOC = A15;
# CTL2/FLAGC
NET "fx2gotdata_in" IOSTANDARD = LVTTL;
NET "fx2gotdata_in" LOC = C15;
# RDY1/SLWR
NET "fx2write_out" IOSTANDARD = LVTTL;
NET "fx2write_out" LOC = E13;
# CTL1/FLAGB
NET "fx2gotroom_in" IOSTANDARD = LVTTL;
NET "fx2gotroom_in" LOC = A9;
# PA6/PKTEND
NET "fx2pktend_out" IOSTANDARD = LVTTL;
NET "fx2pktend_out" LOC = C4;
#Created by Constraints Editor (xc6slx45-csg324-3) - 2012/10/01

#Created by Constraints Editor (xc6slx45-csg324-3) - 2012/10/03
NET "fx2clk_in" TNM_NET = "fx2clk_in";
TIMESPEC TS_fx2clk_in = PERIOD "fx2clk_in" 20 ns HIGH 50 %;


INST "fx2Read_out" TNM = "fx2out";
INST "fx2Write_out" TNM = "fx2out";
INST "fx2OE_out" TNM = "fx2out";
INST "fx2PktEnd_out" TNM = "fx2out";
INST "fx2Addr_out[0]" TNM = "fx2out";
INST "fx2Addr_out[1]" TNM = "fx2out";

INST "fx2data_io[0]" TNM = "fx2data_in";
INST "fx2data_io[1]" TNM = "fx2data_in";
INST "fx2data_io[2]" TNM = "fx2data_in";
INST "fx2data_io[3]" TNM = "fx2data_in";
INST "fx2data_io[4]" TNM = "fx2data_in";
INST "fx2data_io[5]" TNM = "fx2data_in";
INST "fx2data_io[6]" TNM = "fx2data_in";
INST "fx2data_io[7]" TNM = "fx2data_in";

INST "fx2gotdata_in" TNM = "fx2in";
INST "fx2gotroom_in" TNM = "fx2in";

INST "fx2data_io[0]" TNM = "fx2out_data";
INST "fx2data_io[1]" TNM = "fx2out_data";
INST "fx2data_io[2]" TNM = "fx2out_data";
INST "fx2data_io[3]" TNM = "fx2out_data";
INST "fx2data_io[4]" TNM = "fx2out_data";
INST "fx2data_io[5]" TNM = "fx2out_data";
INST "fx2data_io[6]" TNM = "fx2out_data";
INST "fx2data_io[7]" TNM = "fx2out_data";

TIMEGRP "fx2out" OFFSET = OUT 14 ns AFTER "fx2clk_in";
TIMEGRP "fx2out_data" OFFSET = OUT 22 ns AFTER "fx2clk_in";

TIMEGRP "fx2in" OFFSET = IN 11 ns VALID 15 ns BEFORE "fx2clk_in" RISING;
TIMEGRP "fx2data_in" OFFSET = IN 9 ns VALID 15 ns BEFORE "fx2clk_in" RISING;

#TIMEGRP "fx2in" OFFSET = IN 9.5 ns  AFTER "fx2clk_in" RISING;
#TIMEGRP "fx2data_in" OFFSET = IN 11 ns AFTER "fx2clk_in" RISING;
